# -*- Python -*-
import os
import sys
import re
import platform

try:
   import lit.util
   import lit.formats
except ImportError:
   pass

config.name = 'clam-prov'

config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.c']

config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')
config.useProgressBar= True
config.showOutput= True
config.timeout=30
config.max_time=30

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which(cmd):
    return lit.util.which(cmd, config.environment['PATH'])

addEnv('HOME')
addEnv('PWD')
addEnv('C_INCLUDE_PATH')

repositoryRoot = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
lit_config.note('Repository root is {}'.format(repositoryRoot))
lit_config.note('Found clang: {}'.format(which('clang')))

clam_prov_cmd = which('clam-prov.py')
if not isexec(clam_prov_cmd):
   lit_config.fatal('Could not find the clam-prov executable')
else:
   lit_config.note('Found clam-prov.py: {}'.format(clam_prov_cmd))

cmp_cmd = which('cmp')
if not isexec(cmp_cmd):
   lit_config.fatal('Could not find the cmp utility')
else:
   lit_config.note('Found cmp: {}'.format(cmp_cmd))
   
config.substitutions.append(('%clam-prov', clam_prov_cmd))
config.substitutions.append(('%cmp', cmp_cmd))
config.substitutions.append(('%tests', os.path.join(repositoryRoot,'tests')))
